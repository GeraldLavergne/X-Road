pipeline {
    agent any
    stages {
        stage('Clone X-Road Security Server Sidecar repository') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'master']],
                    doGenerateSubmoduleConfigurations: false,
                    gitTool: 'Default',
                    userRemoteConfigs: [
                        [
                            url: 'https://github.com/nordic-institute/X-Road-Security-Server-sidecar.git',
                            refspec: '+refs/heads/*:refs/remotes/origin/* +refs/pull/*/head:refs/remotes/origin/pull/*'
                        ]
                    ]
                ])
            }
        }
        stage('Build X-Road Security Server Sidecar provider with Finnish settings image') {
            steps {
                sh 'docker build -f sidecar/provider/fi/Dockerfile --build-arg DIST=${RELEASE_VERSION} -t niis/xroad-security-server-sidecar:${IMAGE_TAG} sidecar/'
            }
        }
        stage('Optionally add latest tag to X-Road Security Server Sidecar provider with Finnish settings image') {
            when {
                expression { params.IS_LATEST == true }
            }
            steps {
                sh 'docker tag niis/xroad-security-server-sidecar:${IMAGE_TAG} niis/xroad-security-server-sidecar:latest-provider-fi'
            }
        }
        stage('Run container') {
            steps {
                sh 'docker run --detach -p 4100:4000 -p 4101:80 -p 5588:5588 -e XROAD_TOKEN_PIN=5678 -e XROAD_ADMIN_USER=admin -e XROAD_ADMIN_PASSWORD=1234 --name sss-provider-fi niis/xroad-security-server-sidecar:${IMAGE_TAG}'
            }
        }
        stage('Test') {
            steps {
                retry (5) {
                    sleep(time: 20, unit: 'SECONDS')
                    script {
                        def response = sh(script: 'curl --write-out %{http_code} --silent --output /dev/null --insecure https://localhost:4100', returnStdout: true)
                        if(response == '302') {
                            echo '========> X-Road Security Server Sidecar is successfully running'
                            currentBuild.result = 'SUCCESS'
                        } else {
                            error("========> X-Road Security Server Sidecar returned " + response + " . Try again in 20s")
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            sh 'docker rm -f sss-provider-fi || true'
        }
    }
}