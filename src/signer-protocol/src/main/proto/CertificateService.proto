syntax = "proto3";

option java_multiple_files = true;

import "CommonMessages.proto";
import "Tokens.proto";
import "TokenStatusInfo.proto";

package org.niis.xroad.signer.proto;

service CertificateService {
  rpc ActivateCert (ActivateCertReq) returns (Empty) {}

  rpc GetCertificateInfoForHash (GetCertificateInfoForHashReq) returns (GetCertificateInfoResp) {}

  rpc GetMemberCerts (GetMemberCertsReq) returns (GetMemberCertsResp) {}

  rpc SetCertStatus (SetCertStatusReq) returns (Empty) {}

  rpc GenerateCertRequest (GenerateCertRequestReq) returns (GenerateCertRequestResp) {}

  rpc RegenerateCertRequest (RegenerateCertRequestReq) returns (RegenerateCertRequestResp) {}

  rpc DeleteCert (DeleteCertReq) returns (Empty) {}

  rpc DeleteCertRequest (DeleteCertRequestReq) returns (Empty) {}

  rpc ImportCert (ImportCertReq) returns (ImportCertResp) {}

  rpc GenerateSelfSignedCert (GenerateSelfSignedCertReq) returns (GenerateSelfSignedCertResp) {}
}

message GetCertificateInfoForHashReq {
  string cert_hash = 1;
}

message GetCertificateInfoResp {
  CertificateInfoProto certificate_info = 1;
}

message ActivateCertReq {
  string cert_id_or_hash = 1;
  bool active = 2;
}

message SetCertStatusReq{
  string cert_id = 1;
  string status = 2;
}

message GetMemberCertsReq{
  ClientIdProto member_id = 1;
}

message GetMemberCertsResp{
  repeated CertificateInfoProto certs = 1;
}

message RegenerateCertRequestReq {
  string cert_request_id = 1;
  CertificateRequestFormat format = 2;
}

message RegenerateCertRequestResp {
  string cert_req_id = 1;
  bytes cert_request = 2;
  CertificateRequestFormat format = 3;
  ClientIdProto member_id = 4;
  KeyUsageInfo key_usage = 5;
}

/** Specifies the cert request format to return. */
enum CertificateRequestFormat {
  CERTIFICATE_REQUEST_FORMAT_UNKNOWN = 0;
  PEM = 1;
  DER = 2;
}

message DeleteCertReq {
  string cert_id = 1;
}

message DeleteCertRequestReq {
  string cert_request_id = 1;
}

message ImportCertReq {
  bytes cert_data = 1;
  string initial_status = 2;
  ClientIdProto member_id = 3;
}

message ImportCertResp {
  string key_id = 1;
}

message GenerateSelfSignedCertReq {
  string key_id = 1;
  string common_name = 2;
  int64 date_not_before = 3;
  int64 date_not_after = 4;
  KeyUsageInfo key_usage = 5;
  ClientIdProto member_id = 6;
}

message GenerateSelfSignedCertResp {
  bytes certificate_bytes = 1;
}

message GenerateCertRequestReq {
  string key_id = 1;
  ClientIdProto member_id = 2;
  KeyUsageInfo key_usage = 3;
  string subject_name = 4;
  CertificateRequestFormat format = 5;
}

message GenerateCertRequestResp {
  string cert_req_id = 1;
  bytes cert_request = 2;
  CertificateRequestFormat format = 3;
}
