plugins {
  id 'java-library'
  id 'com.google.protobuf'
}

sourceSets {
  main {
    java.srcDirs = [
      'src/main/java'
      , 'build/generated-sources'
      , 'build/generated/source/proto/main/grpc'
      , 'build/generated/source/proto/main/java']
  }
}

dependencies {
  implementation project(':common:common-util')
  api project(':common:common-rpc')

  intTestRuntimeOnly project(':signer')
  intTestRuntimeOnly project(':common:common-util')

  intTestImplementation project(":common:common-test")
  intTestImplementation("com.nortal.test:test-automation-core:$testAutomationFrameworkVersion")
  intTestImplementation("com.nortal.test:test-automation-allure:$testAutomationFrameworkVersion")
  intTestImplementation "org.assertj:assertj-core:$assertjVersion"
}

protobuf {
  protoc { artifact = "com.google.protobuf:protoc:$protocVersion" }
  plugins {
    grpc { artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion" }
  }
  generateProtoTasks {
    all()*.plugins { grpc {} }
  }
}

compileJava.dependsOn generateProto

test {
  useJUnitPlatform()
}

tasks.register('intTest', Test) {
  useJUnitPlatform()

  setDescription("Runs integration tests.")
  group = 'verification'

  testClassesDirs = sourceSets.intTest.output.classesDirs
  classpath = sourceSets.intTest.runtimeClasspath

  systemProperty("java.library.path", "../passwordstore")

  testLogging {
    showStackTraces(true)
    showExceptions(true)
    showCauses(true)
    showStandardStreams(true)
  }
}

tasks.named('check') {
  dependsOn tasks.named('intTest')
}
