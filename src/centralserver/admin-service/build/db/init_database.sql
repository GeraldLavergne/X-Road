SELECT 'CREATE DATABASE "${XRD_CS_DB[DATABASE_NAME]}"'
WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = '${XRD_CS_DB[DATABASE_NAME]}')\gexec
REVOKE ALL ON DATABASE "${XRD_CS_DB[DATABASE_NAME]}" FROM PUBLIC;

DO $$
  BEGIN
    BEGIN
      CREATE ROLE "${XRD_CS_DB[ADMIN_USER]}" LOGIN PASSWORD '${XRD_CS_DB[ADMIN_PASSWORD]}';
    EXCEPTION
      WHEN duplicate_object THEN
        RAISE NOTICE 'User "${XRD_CS_DB[ADMIN_USER]}" already exists. Setting only login password.';
        ALTER ROLE "${XRD_CS_DB[ADMIN_USER]}" WITH LOGIN PASSWORD '${XRD_CS_DB[ADMIN_PASSWORD]}';
    END;

    GRANT "${XRD_CS_DB[ADMIN_USER]}" to "${XRD_CS_DB[MASTER_USER]}";
    EXCEPTION
      WHEN OTHERS THEN
        RAISE NOTICE 'Unexpected exception while performing CREATE ROLE and GRANT operations on "${XRD_CS_DB[ADMIN_USER]}"';
        RAISE;
  END;
$$;
GRANT CREATE, TEMPORARY, CONNECT ON DATABASE "${XRD_CS_DB[DATABASE_NAME]}" TO "${XRD_CS_DB[ADMIN_USER]}";
\c "${XRD_CS_DB[DATABASE_NAME]}"

CREATE EXTENSION hstore;

CREATE SCHEMA IF NOT EXISTS "${XRD_CS_DB[SCHEMA_NAME]}" AUTHORIZATION "${XRD_CS_DB[ADMIN_USER]}";
REVOKE ALL ON SCHEMA public FROM PUBLIC;
GRANT USAGE ON SCHEMA public to "${XRD_CS_DB[ADMIN_USER]}";

DO $$
  BEGIN
    IF trim('${XRD_CS_DB[USER]}') <> '' AND trim('${XRD_CS_DB[USER]}') <> trim('${XRD_CS_DB[ADMIN_USER]}') THEN
      CREATE ROLE "{XRD_CS_DB[USER]:-<empty>}" LOGIN PASSWORD '${XRD_CS_DB[USER_PASSWORD]}';
      GRANT "${XRD_CS_DB[USER]}:-<empty>" to "${XRD_CS_DB[ADMIN_USER]}";
      GRANT TEMPORARY,CONNECT ON DATABASE "${XRD_CS_DB[DATABASE_NAME]}" TO "${XRD_CS_DB[USER]:-<empty>}";
      GRANT USAGE ON SCHEMA public to "${XRD_CS_DB[USER]:-<empty>}";
    END IF;
  EXCEPTION WHEN duplicate_object THEN
    RAISE NOTICE 'User "${db_user}" already exists';
  END;
$$;


